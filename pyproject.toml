[project]
name = "audify"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10,<=3.13"
dependencies = [
    "bs4>=0.0.2",
    "click>=8.1.8",
    "ebooklib>=0.18",
    "markdown>=3.7",
    "pypdf2>=3.0.1",
    "sentencepiece>=0.2.0",
    "streamlit>=1.33.0",
    "soundfile>=0.13.1",
    "langchain>=0.3.27",
    "langchain-ollama>=0.3.7",
    "tqdm>=4.67.1",
    "pydub>=0.25.1",
    "reportlab>=4.4.3",
]

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=44.1.0", "wheel>=0.34.2"]
build-backend = "poetry.core.masonry.api"


[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.9.3",
    "taskipy>=1.13.0",
    "isort>=5.13.2",
    "mypy>=1.11.2",
    "ipykernel>=6.29.5",
    "types-requests>=2.32.4.20250913",
    "pipreqs>=0.5.0",
]
gpu = ["black>=25.1.0"]

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:", "def test_", "ABC"]
omit = ["*.venv/*"]

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py"]
addopts = []
filterwarnings = ["ignore::DeprecationWarning", "ignore::FutureWarning"]


[tool.ruff]
exclude = [
    "*/migrations/*",
    "*/settings.py",
    "*/wsgi.py",
    "*/asgi.py",
    "*/mlflwo/*",
    "*/__pycache__/*",
    "data/*",
]

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PT']
exclude = ['.venv']


[tool.mypy]
ignore_missing_imports = true


[tool.uv.sources]
torch = [{ index = "pytorch-cu128" }]

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[tool.taskipy.tasks]
test = "uv run pytest --cov=audify --cov-report=term-missing"
format = "ruff check . --fix"
pre_test = "task format && mypy ./audify ./tests --ignore-missing-imports"
post_test = "uv run coverage html"
run = "uv run python -m audify.start"
podcast = "uv run python -m audify.create_podcast"
up = "docker compose up"
